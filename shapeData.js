const shapeSize = 15;
const camZDisp = 4;
const persViewSizeMult = 0.8;
const FOV = [1, 1];
const dAlpha = 0.12;
const dBeta = 0.05;

const triangleColors = [
  [255, 0, 0],
  [255, 255, 0],
  [0, 255, 0],
  [0, 255, 255],
  [0, 0, 255],
  [255, 0, 255],
];

const shapePoints = [
  [//cube
    [-1, -1, -1],
    [1, -1, -1],
    [-1, 1, -1],
    [1, 1, -1],
    [-1, -1, 1],
    [1, -1, 1],
    [-1, 1, 1],
    [1, 1, 1]
  ],
  [//tetra
    [-1, -1, -1],
    [-1, 1, 1],
    [1, 1, -1],
    [1, -1, 1]
  ],
  [//octa
    [-1.4142135623730951, 0, 0],
    [0, -1.4142135623730951, 0],
    [1.4142135623730951, 0, 0],
    [0, 1.4142135623730951, 0],
    [0, 0, -1.4142135623730951],
    [0, 0, 1.4142135623730951],
  ],
  [//cylinder
    [1, 0, 1],
    [0.9238795325112867, 0.3826834323650898, 1],
    [0.7071067811865476, 0.7071067811865475, 1],
    [0.38268343236508984, 0.9238795325112867, 1],
    [0, 1, 1],
    [-0.3826834323650897, 0.9238795325112867, 1],
    [-0.7071067811865475, 0.7071067811865476, 1],
    [-0.9238795325112867, 0.3826834323650899, 1],
    [-1, 0, 1],
    [-0.9238795325112868, -0.38268343236508967, 1],
    [-0.7071067811865477, -0.7071067811865475, 1],
    [-0.38268343236509034, -0.9238795325112865, 1],
    [0, -1, 1],
    [0.38268343236509, -0.9238795325112866, 1],
    [0.7071067811865474, -0.7071067811865477, 1],
    [0.9238795325112865, -0.3826834323650904, 1],
    [1, 0, -1],
    [0.9238795325112867, 0.3826834323650898, -1],
    [0.7071067811865476, 0.7071067811865475, -1],
    [0.38268343236508984, 0.9238795325112867, -1],
    [0, 1, -1],
    [-0.3826834323650897, 0.9238795325112867, -1],
    [-0.7071067811865475, 0.7071067811865476, -1],
    [-0.9238795325112867, 0.3826834323650899, -1],
    [-1, 0, -1],
    [-0.9238795325112868, -0.38268343236508967, -1],
    [-0.7071067811865477, -0.7071067811865475, -1],
    [-0.38268343236509034, -0.9238795325112865, -1],
    [0, -1, -1],
    [0.38268343236509, -0.9238795325112866, -1],
    [0.7071067811865474, -0.7071067811865477, -1],
    [0.9238795325112865, -0.3826834323650904, -1],
    [0, 0, 1],
    [0, 0, -1]
  ],
  [//I
    [-1, 1, 1],
    [-1, 0.8, 1],
    [-0.1, 0.8, 1],
    [-0.1, -0.8, 1],
    [-1, -0.8, 1],
    [-1, -1, 1],
    [1, -1, 1],
    [1, -0.8, 1],
    [0.1, -0.8, 1],
    [0.1, 0.8, 1],
    [1, 0.8, 1],
    [1, 1, 1],
    [-1, 1, -1],
    [-1, 0.8, -1],
    [-0.1, 0.8, -1],
    [-0.1, -0.8, -1],
    [-1, -0.8, -1],
    [-1, -1, -1],
    [1, -1, -1],
    [1, -0.8, -1],
    [0.1, -0.8, -1],
    [0.1, 0.8, -1],
    [1, 0.8, -1],
    [1, 1, -1]
  ],
  [//cross
    [-0.25, 1.25, -0.25],
    [0.25, 1.25, -0.25],
    [0.25, 1.25, 0.25],
    [-0.25, 1.25, 0.25],
    [-0.25, 0.25, -0.25],
    [0.25, 0.25, -0.25],
    [0.25, 0.25, 0.25],
    [-0.25, 0.25, 0.25],
    [-0.25, -0.25, -0.25],
    [0.25, -0.25, -0.25],
    [0.25, -0.25, 0.25],
    [-0.25, -0.25, 0.25],
    [-0.25, -1.25, -0.25],
    [0.25, -1.25, -0.25],
    [0.25, -1.25, 0.25],
    [-0.25, -1.25, 0.25],
    [-1.25, 0.25, -0.25],
    [-1.25, 0.25, 0.25],
    [-1.25, -0.25, 0.25],
    [-1.25, -0.25, -0.25],
    [1.25, 0.25, -0.25],
    [1.25, 0.25, 0.25],
    [1.25, -0.25, 0.25],
    [1.25, -0.25, -0.25]
  ],
  [//tube
    [0.9238795325112867, 0.3826834323650898, -1],
    [0.38268343236508984, 0.9238795325112867, -1],
    [-0.3826834323650897, 0.9238795325112867, -1],
    [-0.9238795325112867, 0.3826834323650899, -1],
    [-0.9238795325112868, -0.38268343236508967, -1],
    [-0.38268343236509034, -0.9238795325112865, -1],
    [0.38268343236509, -0.9238795325112866, -1],
    [0.9238795325112865, -0.3826834323650904, -1],
    [0.692909649383465, 0.2870125742738173, -1],
    [0.2870125742738174, 0.692909649383465, -1],
    [-0.2870125742738173, 0.692909649383465, -1],
    [-0.692909649383465, 0.28701257427381743, -1],
    [-0.6929096493834651, -0.28701257427381727, -1],
    [-0.28701257427381777, -0.6929096493834649, -1],
    [0.2870125742738175, -0.692909649383465, -1],
    [0.6929096493834649, -0.28701257427381777, -1],
    [0.9238795325112867, 0.3826834323650898, 1],
    [0.38268343236508984, 0.9238795325112867, 1],
    [-0.3826834323650897, 0.9238795325112867, 1],
    [-0.9238795325112867, 0.3826834323650899, 1],
    [-0.9238795325112868, -0.38268343236508967, 1],
    [-0.38268343236509034, -0.9238795325112865, 1],
    [0.38268343236509, -0.9238795325112866, 1],
    [0.9238795325112865, -0.3826834323650904, 1],
    [0.692909649383465, 0.2870125742738173, 1],
    [0.2870125742738174, 0.692909649383465, 1],
    [-0.2870125742738173, 0.692909649383465, 1],
    [-0.692909649383465, 0.28701257427381743, 1],
    [-0.6929096493834651, -0.28701257427381727, 1],
    [-0.28701257427381777, -0.6929096493834649, 1],
    [0.2870125742738175, -0.692909649383465, 1],
    [0.6929096493834649, -0.28701257427381777, 1]
  ],
  [//cage
    [-1, -1, -1],
    [1, -1, -1],
    [1, -1, 1],
    [-1, -1, 1],
    [-0.75, -1, -0.75],
    [0.75, -1, -0.75],
    [0.75, -1, 0.75],
    [-0.75, -1, 0.75],
    [-0.75, -0.75, -1],
    [0.75, -0.75, -1],
    [1, -0.75, -0.75],
    [1, -0.75, 0.75],
    [0.75, -0.75, 1],
    [-0.75, -0.75, 1],
    [-1, -0.75, 0.75],
    [-1, -0.75, -0.75],
    [-0.75, -0.75, -0.75],
    [0.75, -0.75, -0.75],
    [0.75, -0.75, 0.75],
    [-0.75, -0.75, 0.75],
    [-0.75, 0.75, -1],
    [0.75, 0.75, -1],
    [1, 0.75, -0.75],
    [1, 0.75, 0.75],
    [0.75, 0.75, 1],
    [-0.75, 0.75, 1],
    [-1, 0.75, 0.75],
    [-1, 0.75, -0.75],
    [-0.75, 0.75, -0.75],
    [0.75, 0.75, -0.75],
    [0.75, 0.75, 0.75],
    [-0.75, 0.75, 0.75],
    [-1, 1, -1],
    [1, 1, -1],
    [1, 1, 1],
    [-1, 1, 1],
    [-0.75, 1, -0.75],
    [0.75, 1, -0.75],
    [0.75, 1, 0.75],
    [-0.75, 1, 0.75]
  ],
  [//pyramid
    [0, 0, 1],
    [1, 0, -1],
    [0.5, 0.8660254037844386, -1],
    [-0.5, 0.8660254037844387, -1],
    [-1.0, 0, -1],
    [-0.5, -0.8660254037844384, -1],
    [0.5, -0.866025403784439, -1]
  ],
  [//antiprism
    [1, 0, 1],
    [0, -1, 1],
    [-1, 0, 1],
    [0, 1, 1],
    [0.7071067811865476, -0.7071067811865476, -1],
    [-0.7071067811865476, -0.7071067811865476, -1],
    [-0.7071067811865476, 0.7071067811865476, -1],
    [0.7071067811865476, 0.7071067811865476, -1]
  ]
];

//[a, b, c, d] shorthand for [a, b, c], [a, d, b]
const shapeQuads = [
  [//cube
    [0, 3, 1, 2],
    [7, 4, 5, 6],
    [0, 5, 4, 1],
    [7, 2, 6, 3],
    [6, 0, 4, 2],
    [1, 7, 5, 3]
  ],
  [//tetra
    [0, 1, 2, 3],
    [2, 3, 0, 1]
  ],
  [//octa
    [4, 1, 0, 2],
    [4, 3, 2, 0],
    [1, 5, 0, 2],
    [3, 5, 2, 0]
  ],
  [//cylinder
    [1, 32, 0, 2],
    [3, 32, 2, 4],
    [5, 32, 4, 6],
    [7, 32, 6, 8],
    [9, 32, 8, 10],
    [11, 32, 10, 12],
    [13, 32, 12, 14],
    [15, 32, 14, 0],
    [33, 17, 16, 18],
    [33, 19, 18, 20],
    [33, 21, 20, 22],
    [33, 23, 22, 24],
    [33, 25, 24, 26],
    [33, 27, 26, 28],
    [33, 29, 28, 30],
    [33, 31, 30, 16],
    [0, 17, 1, 16],
    [1, 18, 2, 17],
    [2, 19, 3, 18],
    [3, 20, 4, 19],
    [4, 21, 5, 20],
    [5, 22, 6, 21],
    [6, 23, 7, 22],
    [7, 24, 8, 23],
    [8, 25, 9, 24],
    [9, 26, 10, 25],
    [10, 27, 11, 26],
    [11, 28, 12, 27],
    [12, 29, 13, 28],
    [13, 30, 14, 29],
    [14, 31, 15, 30],
    [15, 16, 0, 31]
  ],
  [//I
    [0, 13, 1, 12],
    [1, 14, 2, 13],
    [2, 15, 3, 14],
    [3, 16, 4, 15],
    [4, 17, 5, 16],
    [5, 18, 6, 17],
    [6, 19, 7, 18],
    [7, 20, 8, 19],
    [8, 21, 9, 20],
    [9, 22, 10, 21],
    [10, 23, 11, 22],
    [11, 12, 0, 23],
    [10, 0, 1, 11],
    [6, 4, 5, 7],
    [8, 2, 3, 9],
    [12, 22, 13, 23],
    [16, 18, 17, 19],
    [14, 20, 15, 21]
  ],
  [//cross
    [0, 2, 1, 3],
    [13, 0, 1, 12],
    [3, 14, 2, 15],
    [0, 7, 3, 4],
    [6, 1, 2, 5],
    [14, 12, 13, 15],
    [12, 11, 8, 15],
    [10, 13, 9, 14],
    [16, 18, 17, 19],
    [7, 16, 17, 4],
    [11, 17, 18, 7],
    [8, 18, 19, 11],
    [4, 19, 16, 8],
    [22, 20, 21, 23],
    [20, 6, 21, 5],
    [21, 10, 22, 6],
    [22, 9, 23, 10],
    [23, 5, 20, 9]
  ],
  [//tube
    [0, 9, 1, 8],
    [1, 10, 2, 9],
    [2, 11, 3, 10],
    [3, 12, 4, 11],
    [4, 13, 5, 12],
    [5, 14, 6, 13],
    [6, 15, 7, 14],
    [7, 8, 0, 15],
    [25, 16, 17, 24],
    [26, 17, 18, 25],
    [27, 18, 19, 26],
    [28, 19, 20, 27],
    [29, 20, 21, 28],
    [30, 21, 22, 29],
    [31, 22, 23, 30],
    [24, 23, 16, 31],
    [17, 0, 1, 16],
    [18, 1, 2, 17],
    [19, 2, 3, 18],
    [20, 3, 4, 19],
    [21, 4, 5, 20],
    [22, 5, 6, 21],
    [23, 6, 7, 22],
    [16, 7, 0, 23],
    [25, 8, 24, 9],
    [26, 9, 25, 10],
    [27, 10, 26, 11],
    [28, 11, 27, 12],
    [29, 12, 28, 13],
    [30, 13, 29, 14],
    [31, 14, 30, 15],
    [24, 15, 31, 8]
  ],
  [//cage
    [5, 0, 1, 4],
    [6, 1, 2, 5],
    [7, 2, 3, 6],
    [4, 3, 0, 7],
    [37, 32, 36, 33],
    [38, 33, 37, 34],
    [39, 34, 38, 35],
    [36, 35, 39, 32],
    [9, 0, 8, 1],
    [21, 1, 9, 33],
    [20, 33, 21, 32],
    [8, 32, 20, 0],
    [11, 1, 10, 2],
    [23, 2, 11, 34],
    [22, 34, 23, 33],
    [10, 33, 22, 1],
    [13, 2, 12, 3],
    [25, 3, 13, 35],
    [24, 35, 25, 34],
    [12, 34, 24, 2],
    [15, 3, 14, 0],
    [27, 0, 15, 32],
    [26, 32, 27, 35],
    [14, 35, 26, 3],
    [17, 4, 5, 16],
    [18, 5, 6, 17],
    [19, 6, 7, 18],
    [16, 7, 4, 19],
    [37, 28, 29, 36],
    [38, 29, 30, 37],
    [39, 30, 31, 38],
    [36, 31, 28, 39],
    [28, 8, 20, 16],
    [21, 17, 29, 9],
    [29, 10, 22, 17],
    [23, 18, 30, 11],
    [30, 12, 24, 18],
    [25, 19, 31, 13],
    [31, 14, 26, 19],
    [27, 16, 28, 15],
    [17, 8, 16, 9],
    [18, 10, 17, 11],
    [19, 12, 18, 13],
    [16, 14, 19, 15],
    [29, 20, 21, 28],
    [30, 22, 23, 29],
    [31, 24, 25, 30],
    [27, 31, 26, 28],
  ],
  [//pyramid
    [2, 0, 1, 3],
    [4, 0, 3, 5],
    [6, 0, 5, 1],
    [5, 1, 6, 4],
    [3, 1, 4, 2]
  ],
  [//antiprism
    [0, 2, 1, 3],
    [6, 4, 5, 7],
    [1, 4, 0, 5],
    [2, 5, 1, 6],
    [0, 7, 3, 4],
    [3, 6, 2, 7]
  ]
];

//vertices in anticlockwise direction for cross product in right direction
const shapeTriangles = [
  [], [], [], [], [], [], [], [], [], []//old shapes
];

const shapeNames = [
  "cube",
  "tetrahedron",
  "octahedron",
  "cylinder",
  "I-beam",
  "cross",
  "tube",
  "cage",
  "pyramid",
  "antiprism"
]

const triangleCount = [
  12,
  4,
  8,
  64,
  36,
  36,
  64,
  96,
  10,
  12
];

const triangleCountMax = 96;
